// Gradle script to build and run the SkyAssets subproject of SkyControl

// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

plugins {
    alias(libs.plugins.download) // to retrieve files from URLs
}

ext {
    bsc = 'src/main/resources/bsc5.dat'
    skies = '../SkyLibrary/src/main/resources/Textures/skies'
}

sourceSets.main.java {
    srcDir 'src/main/java'
    srcDir '../SkyLibrary/src/main/java'
}

dependencies {
    implementation(libs.heart)
    implementation(libs.jcommander)

    implementation(libs.jme3.core)
    implementation(libs.jme3.effects)
}

// Register cleanup tasks:

clean.dependsOn('cleanCatalog', 'cleanDownload', 'cleanSkyTextures')

// decompress the Yale Bright Star Catalog

tasks.register('catalog') {
    dependsOn 'download'
    doLast { file(bsc).text = resources.gzip("${bsc}.gz").read().text }
}
tasks.register('cleanCatalog', Delete) {
    delete file(bsc)
}

// download gzipped Yale Bright Star Catalog

processResources.dependsOn('download')
tasks.register('download', Download) {
    src 'http://tdc-www.harvard.edu/catalogs/bsc5.dat.gz'
    dest file("${bsc}.gz")
    overwrite false
}
tasks.register('cleanDownload', Delete) {
    delete file("${bsc}.gz")
}

// Register tasks to generate sky textures:

tasks.register('skyTextures') {
    dependsOn = ['clouds', 'equator', 'equator16m', 'moons', 'north', \
        'north16m',  'ramps', 'south', 'south16m', 'suns', 'wiltshire', \
        'wiltshire16m']
    description = 'generate texture assets distributed with SkyControl'
}
tasks.register('cleanSkyTextures', Delete) {
    delete fileTree(dir: skies)
}

tasks.register('clouds', JavaExec) {
    mainClass = 'jme3utilities.sky.textures.MakeClouds'
    outputs.files(["$skies/clouds/clear.png", \
                   "$skies/clouds/fbm.png", \
                   "$skies/clouds/overcast.png"])
}
tasks.register('debugEquator', JavaExec) {
    args = ['-c', '-p', 'equator']
    debug true
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
}
tasks.register('equator', JavaExec) {
    args = ['-c', '-p', 'equator']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files(fileTree("$skies/star-maps/equator"))
}
tasks.register('equator16m', JavaExec) {
    args = ['-c', '-p', 'equator_16m']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files(fileTree("$skies/star-maps/equator16m"))
}
tasks.register('moons', JavaExec) {
    mainClass = 'jme3utilities.sky.textures.MakeMoons'
    outputs.files(fileTree("$skies/moon-nonviral"))
}
tasks.register('north', JavaExec) {
    args = ['-p', 'north']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files("$skies/star-maps/northern.png")
}
tasks.register('north16m', JavaExec) {
    args = ['-p', 'north_16m']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files("$skies/star-maps/16m/northern.png")
}
tasks.register('ramps', JavaExec) {
    mainClass = 'jme3utilities.sky.textures.MakeRamps'
    outputs.files("$skies/ramps/haze.png")
}
tasks.register('south', JavaExec) {
    args = ['-p', 'south']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files("$skies/star-maps/southern.png")
}
tasks.register('south16m', JavaExec) {
    args = ['-p', 'south_16m']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files("$skies/star-maps/16m/southern.png")
}
tasks.register('suns', JavaExec) {
    mainClass = 'jme3utilities.sky.textures.MakeSun'
    outputs.files(fileTree("$skies/suns"))
}
tasks.register('wiltshire', JavaExec) {
    args = ['-p', 'wiltshire']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files("$skies/star-maps/wiltshire.png")
}
tasks.register('wiltshire16m', JavaExec) {
    args = ['-p', 'wiltshire_16m']
    dependsOn catalog
    inputs.files(bsc)
    mainClass = 'jme3utilities.sky.textures.MakeStarMaps'
    outputs.files("$skies/star-maps/16m/wiltshire.png")
}
